<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="9cf27a23-e7d6-4f19-a38d-1f9b23217202" name="kemack@KEMACK 2016-12-22 14:31:19" runUser="NORTHAMERICA\kemack" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="10d887a4-c2d1-4de1-a6de-dadd07806082">
    <Description>These are default test settings for a local test run.</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="kemack_KEMACK 2016-12-22 14_31_19" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2016-12-22T14:31:19.7749986-05:00" queuing="2016-12-22T14:31:20.1290084-05:00" start="2016-12-22T14:32:33.7314078-05:00" finish="2016-12-22T14:43:56.8338284-05:00" />
  <ResultSummary outcome="Completed">
    <Counters total="1" executed="1" passed="0" error="0" failed="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="1" inProgress="0" pending="0" />
    <RunInfos>
      <RunInfo computerName="KEMACK" outcome="Completed" timestamp="2016-12-22T14:43:56.8338284-05:00" />
    </RunInfos>
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="c:\users\kemack\documents\visual studio 2015\projects\applicationinsightsdemo\applicationinsightsdemo.loadtest\webtest1.webtest" id="6a2b3924-22f4-4f0c-a024-12e8b4c58b8a" persistedWebTest="">
      <Execution id="d368c503-cd96-4d79-a428-ebf192daa22f" />
    </WebTest>
    <LoadTest Name="LoadTest1" Description="" Owner="" storage="c:\users\kemack\documents\visual studio 2015\projects\applicationinsightsdemo\applicationinsightsdemo.loadtest\loadtest1.loadtest" Priority="2147483647" Enabled="true" CssProjectStructure="" CssIteration="" DeploymentItemsEditable="" WorkItemIds="" TraceLevel="None" CurrentRunConfig="Run Settings1" Id="62923b21-8ea7-4aed-b3c9-841811dafee9">
      <Scenarios>
        <Scenario Name="Scenario1" DelayBetweenIterations="0" PercentNewUsers="0" IPSwitching="false" TestMixType="Sequential" ApplyDistributionToPacingDelay="true" MaxTestIterations="0" DisableDuringWarmup="false" DelayStartTime="0" AllowedAgents="">
          <ThinkProfile Value="0.2" Pattern="NormalDistribution" />
          <LoadProfile Pattern="Step" InitialUsers="10" MaxUsers="50" StepUsers="5" StepDuration="30" StepRampTime="0" />
          <TestMix>
            <TestProfile Name="WebTest1" Path="c:\users\kemack\documents\visual studio 2015\projects\applicationinsightsdemo\applicationinsightsdemo.loadtest\webtest1.webtest" Id="6a2b3924-22f4-4f0c-a024-12e8b4c58b8a" Percentage="0" Type="Microsoft.VisualStudio.TestTools.WebStress.DeclarativeWebTestElement, Microsoft.VisualStudio.QualityTools.LoadTest, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
          </TestMix>
          <BrowserMix>
            <BrowserProfile Percentage="100">
              <Browser Name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header Name="User-Agent" Value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header Name="Accept" Value="*/*" />
                  <Header Name="Accept-Language" Value="{{$IEAcceptLanguage}}" />
                  <Header Name="Accept-Encoding" Value="GZIP" />
                </Headers>
              </Browser>
            </BrowserProfile>
          </BrowserMix>
          <NetworkMix>
            <NetworkProfile Percentage="100">
              <Network Name="LAN" BandwidthInKbps="1000000" NetworkProfileConfigurationXml="&lt;Emulation&gt;&lt;VirtualChannel name=&quot;defaultChannel&quot;&gt;&lt;FilterList/&gt;&lt;VirtualLink instances=&quot;1&quot; name=&quot;defaultLink&quot;&gt;&lt;LinkRule dir=&quot;upstream&quot;&gt;&lt;Bandwidth&gt;&lt;Speed unit=&quot;kbps&quot;&gt;1000000&lt;/Speed&gt;&lt;/Bandwidth&gt;&lt;/LinkRule&gt;&lt;LinkRule dir=&quot;downstream&quot;&gt;&lt;Bandwidth&gt;&lt;Speed unit=&quot;kbps&quot;&gt;1000000&lt;/Speed&gt;&lt;/Bandwidth&gt;&lt;/LinkRule&gt;&lt;/VirtualLink&gt;&lt;/VirtualChannel&gt;&lt;/Emulation&gt;" />
            </NetworkProfile>
          </NetworkMix>
        </Scenario>
      </Scenarios>
      <CounterSets>
        <CounterSet Name="LoadTest" CounterSetType="LoadTest" LocId="">
          <CounterCategories>
            <CounterCategory Name="LoadTest:Scenario">
              <Counters>
                <Counter Name="User Load" HigherIsBetter="true" />
                <Counter Name="Tests Running" HigherIsBetter="true" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Test">
              <Counters>
                <Counter Name="Total Tests" HigherIsBetter="true" />
                <Counter Name="Passed Tests" HigherIsBetter="true" />
                <Counter Name="Failed Tests" />
                <Counter Name="Tests/Sec" HigherIsBetter="true" />
                <Counter Name="Passed Tests/Sec" HigherIsBetter="true" />
                <Counter Name="Failed Tests/Sec" />
                <Counter Name="Avg. Requests/Test" HigherIsBetter="true" />
                <Counter Name="Avg. Test Time" />
                <Counter Name="% Time in LoadTestPlugin" />
                <Counter Name="% Time in WebTest code" />
                <Counter Name="% Time in Rules" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Transaction">
              <Counters>
                <Counter Name="Total Transactions" HigherIsBetter="true" />
                <Counter Name="Avg. Transaction Time" />
                <Counter Name="Avg. Response Time" />
                <Counter Name="Transactions/Sec" HigherIsBetter="true" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Errors">
              <Counters>
                <Counter Name="Http Errors" />
                <Counter Name="Validation Rule Errors" />
                <Counter Name="Extraction Rule Errors" />
                <Counter Name="Requests Timed Out" />
                <Counter Name="Exceptions" />
                <Counter Name="Total Errors" />
                <Counter Name="Errors/Sec" />
                <Counter Name="Threshold Violations/Sec" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Page">
              <Counters>
                <Counter Name="Total Pages" HigherIsBetter="true" />
                <Counter Name="Avg. Page Time" />
                <Counter Name="Page Response Time Goal" HigherIsBetter="true" />
                <Counter Name="% Pages Meeting Goal" HigherIsBetter="true" />
                <Counter Name="Pages/Sec" HigherIsBetter="true" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:Request">
              <Counters>
                <Counter Name="Total Requests" HigherIsBetter="true" />
                <Counter Name="Passed Requests" HigherIsBetter="true" />
                <Counter Name="Failed Requests" />
                <Counter Name="Cached Requests" HigherIsBetter="true" />
                <Counter Name="Requests/Sec" HigherIsBetter="true" />
                <Counter Name="Passed Requests/Sec" HigherIsBetter="true" />
                <Counter Name="Failed Requests/Sec" />
                <Counter Name="Avg. First Byte Time" />
                <Counter Name="Avg. Response Time" />
                <Counter Name="Avg. Connection Wait Time">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="LoadTest:Page" />
                        <RuleParameter Name="DependentCounter" Value="Avg. Page Time" />
                        <RuleParameter Name="DependentInstance" Value="_Total" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.25" />
                        <RuleParameter Name="CriticalThreshold" Value="0.5" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Avg. Content Length" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="LoadTest:LogEntries">
              <Counters>
                <Counter Name="Total Log Entries" />
                <Counter Name="Log Entries/Sec" />
              </Counters>
            </CounterCategory>
          </CounterCategories>
        </CounterSet>
        <CounterSet Name="Controller" CounterSetType="Controller" LocId="CounterSet_Controller">
          <CounterCategories>
            <CounterCategory Name="Memory">
              <Counters>
                <Counter Name="% Committed Bytes In Use" Range="100" />
                <Counter Name="Available MBytes" RangeGroup="Memory Bytes" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="100" />
                        <RuleParameter Name="CriticalThreshold" Value="50" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Page Faults/sec" />
                <Counter Name="Pages/sec" />
                <Counter Name="Pool Paged Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Pool Nonpaged bytes" RangeGroup="Memory Bytes" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Network Interface">
              <Counters>
                <Counter Name="Bytes Received/sec" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Sent/sec" RangeGroup="Network Bytes" />
                <Counter Name="Output Queue Length">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="1.5" />
                        <RuleParameter Name="CriticalThreshold" Value="2" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Packets Received/sec" RangeGroup="Network Packets" />
                <Counter Name="Packets Sent/sec" RangeGroup="Network Packets" />
                <Counter Name="Current Bandwidth" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Total/sec" RangeGroup="Network Bytes">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="Network Interface" />
                        <RuleParameter Name="DependentCounter" Value="Current Bandwidth" />
                        <RuleParameter Name="DependentInstance" Value="" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.6" />
                        <RuleParameter Name="CriticalThreshold" Value="0.7" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="PhysicalDisk">
              <Counters>
                <Counter Name="% Disk Read Time" Range="100" />
                <Counter Name="% Disk Time" Range="100" />
                <Counter Name="% Disk Write Time" Range="100" />
                <Counter Name="% Idle Time" Range="100" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="40" />
                        <RuleParameter Name="CriticalThreshold" Value="20" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Avg. Disk Bytes/Read" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Transfer" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Write" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Read Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Write Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Current Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk sec/Read" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Transfer" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Write" RangeGroup="Disk sec" />
                <Counter Name="Disk Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Read Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Reads/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Transfers/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Write Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Writes/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Split IO/Sec" RangeGroup="Disk Transfers sec" />
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="Processor">
              <Counters>
                <Counter Name="% Processor Time" Range="100">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="75" />
                        <RuleParameter Name="CriticalThreshold" Value="90" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="% Privileged Time" Range="100" />
                <Counter Name="% User Time" Range="100" />
              </Counters>
              <Instances>
                <Instance Name="_Total" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="System">
              <Counters>
                <Counter Name="Context Switches/sec" />
                <Counter Name="Processes" />
                <Counter Name="Processor Queue Length" />
                <Counter Name="Threads" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Process">
              <Counters>
                <Counter Name="% Processor Time" RangeGroup="Processor Time" />
                <Counter Name="% Privileged Time" RangeGroup="Processor Time" />
                <Counter Name="% User Time" RangeGroup="Processor Time" />
                <Counter Name="Handle Count" />
                <Counter Name="Thread Count" />
                <Counter Name="Private Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Virtual Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Working Set" RangeGroup="Memory Bytes" />
              </Counters>
              <Instances>
                <Instance Name="QTController" />
                <Instance Name="QTController64" />
              </Instances>
            </CounterCategory>
          </CounterCategories>
          <DefaultCountersForAutomaticGraphs>
            <DefaultCounter CategoryName="Processor" CounterName="% Processor Time" InstanceName="_Total" GraphName="" />
            <DefaultCounter CategoryName="Memory" CounterName="Available MBytes" InstanceName="" GraphName="" />
          </DefaultCountersForAutomaticGraphs>
        </CounterSet>
        <CounterSet Name="Agent" CounterSetType="Agent" LocId="CounterSet_Agent">
          <CounterCategories>
            <CounterCategory Name="Memory">
              <Counters>
                <Counter Name="% Committed Bytes In Use" Range="100" />
                <Counter Name="Available MBytes" RangeGroup="Memory Bytes" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="100" />
                        <RuleParameter Name="CriticalThreshold" Value="50" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Page Faults/sec" />
                <Counter Name="Pages/sec" />
                <Counter Name="Pool Paged Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Pool Nonpaged bytes" RangeGroup="Memory Bytes" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Network Interface">
              <Counters>
                <Counter Name="Bytes Received/sec" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Sent/sec" RangeGroup="Network Bytes" />
                <Counter Name="Output Queue Length">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="1.5" />
                        <RuleParameter Name="CriticalThreshold" Value="2" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Packets Received/sec" RangeGroup="Network Packets" />
                <Counter Name="Packets Sent/sec" RangeGroup="Network Packets" />
                <Counter Name="Current Bandwidth" RangeGroup="Network Bytes" />
                <Counter Name="Bytes Total/sec" RangeGroup="Network Bytes">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareCounters, Microsoft.VisualStudio.QualityTools.LoadTest, Version=14.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
                      <RuleParameters>
                        <RuleParameter Name="DependentCategory" Value="Network Interface" />
                        <RuleParameter Name="DependentCounter" Value="Current Bandwidth" />
                        <RuleParameter Name="DependentInstance" Value="" />
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="0.6" />
                        <RuleParameter Name="CriticalThreshold" Value="0.7" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="PhysicalDisk">
              <Counters>
                <Counter Name="% Disk Read Time" Range="100" />
                <Counter Name="% Disk Time" Range="100" />
                <Counter Name="% Disk Write Time" Range="100" />
                <Counter Name="% Idle Time" Range="100" HigherIsBetter="true">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="False" />
                        <RuleParameter Name="WarningThreshold" Value="40" />
                        <RuleParameter Name="CriticalThreshold" Value="20" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="Avg. Disk Bytes/Read" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Transfer" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Bytes/Write" RangeGroup="DiskBytesRate" />
                <Counter Name="Avg. Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Read Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk Write Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Current Disk Queue Length" RangeGroup="Disk Queue Length" />
                <Counter Name="Avg. Disk sec/Read" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Transfer" RangeGroup="Disk sec" />
                <Counter Name="Avg. Disk sec/Write" RangeGroup="Disk sec" />
                <Counter Name="Disk Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Read Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Reads/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Transfers/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Disk Write Bytes/sec" RangeGroup="Disk Bytes sec" />
                <Counter Name="Disk Writes/sec" RangeGroup="Disk Transfers sec" />
                <Counter Name="Split IO/Sec" RangeGroup="Disk Transfers sec" />
              </Counters>
              <Instances>
                <Instance Name="*" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="Processor">
              <Counters>
                <Counter Name="% Processor Time" Range="100">
                  <ThresholdRules>
                    <ThresholdRule Classname="Microsoft.VisualStudio.TestTools.WebStress.Rules.ThresholdRuleCompareConstant, Microsoft.VisualStudio.QualityTools.LoadTest">
                      <RuleParameters>
                        <RuleParameter Name="AlertIfOver" Value="True" />
                        <RuleParameter Name="WarningThreshold" Value="75" />
                        <RuleParameter Name="CriticalThreshold" Value="90" />
                      </RuleParameters>
                    </ThresholdRule>
                  </ThresholdRules>
                </Counter>
                <Counter Name="% Privileged Time" Range="100" />
                <Counter Name="% User Time" Range="100" />
              </Counters>
              <Instances>
                <Instance Name="0" />
                <Instance Name="_Total" />
              </Instances>
            </CounterCategory>
            <CounterCategory Name="System">
              <Counters>
                <Counter Name="Context Switches/sec" />
                <Counter Name="Processes" />
                <Counter Name="Processor Queue Length" />
                <Counter Name="Threads" />
              </Counters>
            </CounterCategory>
            <CounterCategory Name="Process">
              <Counters>
                <Counter Name="% Processor Time" RangeGroup="Processor Time" />
                <Counter Name="% Privileged Time" RangeGroup="Processor Time" />
                <Counter Name="% User Time" RangeGroup="Processor Time" />
                <Counter Name="Handle Count" />
                <Counter Name="Thread Count" />
                <Counter Name="Private Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Virtual Bytes" RangeGroup="Memory Bytes" />
                <Counter Name="Working Set" RangeGroup="Memory Bytes" />
              </Counters>
              <Instances>
                <Instance Name="devenv" />
                <Instance Name="QTAgentService" />
                <Instance Name="QTAgent" />
                <Instance Name="QTAgent32" />
                <Instance Name="QTDCAgent" />
                <Instance Name="QTDCAgent32" />
                <Instance Name="QTAgent_35" />
                <Instance Name="QTAgent_40" />
                <Instance Name="QTAgent32_35" />
                <Instance Name="QTAgent32_40" />
              </Instances>
            </CounterCategory>
          </CounterCategories>
          <DefaultCountersForAutomaticGraphs>
            <DefaultCounter CategoryName="Processor" CounterName="% Processor Time" InstanceName="0" GraphName="" RunType="Local" />
            <DefaultCounter CategoryName="Processor" CounterName="% Processor Time" InstanceName="_Total" GraphName="" RunType="Remote" />
            <DefaultCounter CategoryName="Memory" CounterName="Available MBytes" InstanceName="" GraphName="" />
          </DefaultCountersForAutomaticGraphs>
        </CounterSet>
      </CounterSets>
      <RunConfigurations>
        <RunConfiguration Name="Run Settings1" Description="" ResultsStoreType="Database" TimingDetailsStorage="None" SaveTestLogsOnError="true" SaveTestLogsFrequency="0" MaxErrorDetails="200" MaxErrorsPerType="1000" MaxThresholdViolations="1000" MaxRequestUrlsReported="1000" UseTestIterations="false" RunDuration="600" WarmupTime="0" CoolDownTime="0" TestIterations="100" WebTestConnectionModel="ConnectionPerUser" WebTestConnectionPoolSize="50" SampleRate="15" ValidationLevel="High" SqlTracingConnectString="" SqlTracingConnectStringDisplayValue="" SqlTracingDirectory="" SqlTracingEnabled="false" SqlTracingFileCount="2" SqlTracingRolloverEnabled="true" SqlTracingMinimumDuration="500" RunUnitTestsInAppDomain="true" CoreCount="0" UseMultipleIPs="false" TestAgentConfiguration="Default" AgentDiagnosticsLevel="Warning">
          <CounterSetMappings>
            <CounterSetMapping ComputerName="[CONTROLLER MACHINE]">
              <CounterSetReferences>
                <CounterSetReference CounterSetName="LoadTest" />
                <CounterSetReference CounterSetName="Controller" />
              </CounterSetReferences>
            </CounterSetMapping>
            <CounterSetMapping ComputerName="[AGENT MACHINES]">
              <CounterSetReferences>
                <CounterSetReference CounterSetName="Agent" />
              </CounterSetReferences>
            </CounterSetMapping>
          </CounterSetMappings>
          <LoadGeneratorLocations>
            <GeoLocation Location="Default" Percentage="100" />
          </LoadGeneratorLocations>
        </RunConfiguration>
      </RunConfigurations>
    </LoadTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="62923b21-8ea7-4aed-b3c9-841811dafee9" executionId="1e58476e-1b41-4b6c-9088-2b6a5116892b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d">
      <TestEntries>
        <TestEntry isTransparent="false" testId="6a2b3924-22f4-4f0c-a024-12e8b4c58b8a" executionId="93201d15-b0f4-4b56-a33a-de4267e14ff0" parentExecutionId="1e58476e-1b41-4b6c-9088-2b6a5116892b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
      </TestEntries>
    </TestEntry>
  </TestEntries>
  <Results>
    <TestResult executionId="1e58476e-1b41-4b6c-9088-2b6a5116892b" testId="62923b21-8ea7-4aed-b3c9-841811dafee9" testName="LoadTest1" computerName="KEMACK" endTime="2016-12-22T14:43:56.8182287-05:00" testType="fa4c85ff-1236-4463-b954-3ba2f0eabd95" outcome="Completed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1e58476e-1b41-4b6c-9088-2b6a5116892b">
      <Output>
        <StdOut>500 virtual-users minutes will be charged for this run. Learn more about usage and charges at https://go.microsoft.com/fwlink/?LinkId=532992
Some requests in the test appear to be failing consistently. Review the test errors for more details.
This load test will run using 1 Internet Protocol (IP) addresses.
This run is expected to use 500 virtual-user minutes. The actual consumption will be reported once the run ends. To learn more about usage limits, refer  https://go.microsoft.com/fwlink/?LinkId=303976.
This load test will run using 1 agent cores. Learn more about agent core allocation here: https://go.microsoft.com/fwlink/?LinkId=331637
This run was requested by 'Kevin Mack' using the Visual Studio Team Services Account 'MackBytes'.</StdOut>
      </Output>
    </TestResult>
  </Results>
</TestRun>