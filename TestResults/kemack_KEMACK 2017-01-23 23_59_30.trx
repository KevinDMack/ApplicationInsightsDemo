<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="265570ff-239b-4eca-b7be-17a161acff85" name="kemack@KEMACK 2017-01-23 23:59:30" runUser="NORTHAMERICA\kemack" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="10d887a4-c2d1-4de1-a6de-dadd07806082">
    <Description>These are default test settings for a local test run.</Description>
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="kemack_KEMACK 2017-01-23 23_59_30" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2017-01-23T23:59:30.6540489-05:00" queuing="2017-01-23T23:59:31.2000980-05:00" start="2017-01-23T23:59:31.5286298-05:00" finish="2017-01-23T23:59:45.3503190-05:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest2" storage="c:\users\kemack\documents\visual studio 2015\projects\applicationinsightsdemo\applicationinsightsdemo.loadtest\webtest2.webtest" id="a9f6e537-b916-45d2-a845-75ee58ea5daf" persistedWebTest="">
      <Execution id="7b6ac6f6-9a51-4174-aac5-246b03544457" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="a9f6e537-b916-45d2-a845-75ee58ea5daf" executionId="7b6ac6f6-9a51-4174-aac5-246b03544457" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="7b6ac6f6-9a51-4174-aac5-246b03544457" testId="a9f6e537-b916-45d2-a845-75ee58ea5daf" testName="WebTest2" computerName="KEMACK" duration="00:00:02.8879420" startTime="2017-01-23T23:59:31.6191369-05:00" endTime="2017-01-23T23:59:45.2748141-05:00" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7b6ac6f6-9a51-4174-aac5-246b03544457">
      <Output>
        <ErrorInfo>
          <Message>4 primary requests, 0 dependant requests and 0 conditional rules failed</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest2.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="10d887a4-c2d1-4de1-a6de-dadd07806082">
        <Description>These are default test settings for a local test run.</Description>
        <Execution>
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="kemack_KEMACK 2017-01-23 23_59_30" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>kemack_KEMACK 2017-01-23 23_59_30\In\7b6ac6f6-9a51-4174-aac5-246b03544457\WebTest2.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>